generator client {
  provider = "prisma-client-js"
  output   = "../__generated__"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  Regular
  Admin
}

enum AuthMethod {
  CREDENTIALS
  GOOGLE
}

enum TokenType {
  VERIFICATION
  TWO_FACTOR
  PASSWORD_RESET
}

model User {
  id                 String     @id @default(uuid())
  email              String     @unique
  password           String
  displayName        String
  picture            String
  isVerified         Boolean    @default(false) @map("is_verified")
  isTwoFactorEnabled Boolean    @default(false) @map("is_two_factor_enabled")
  method             AuthMethod
  role               UserRole   @default(Regular)
  secondName        String   @map("second_name")
  studentIdFront    String   @map("student_id_front")
  studentIdBack     String?  @map("student_id_back")

  accounts Account[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  @@map("users")
}

model Account {
  id       String @id @default(uuid())
  type     String
  provider String
  expiresAt    Int     @map("expires_at")
  refreshToken String? @map("refresh_token")
  accesToken   String? @map("access_token")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  user   User?   @relation(fields: [userId], references: [id])
  userId String? @map("user_id")

  @@map("accounts")
}

model Token {
  id        String    @id @default(uuid())
  email     String
  token     String    @unique
  type      TokenType
  expiresIn DateTime  @map("expires_in")

  @@map("tokens")
}
